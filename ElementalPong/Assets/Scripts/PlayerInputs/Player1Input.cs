//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/PlayerInputs/Player1Input.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Player1Input : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Player1Input()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player1Input"",
    ""maps"": [
        {
            ""name"": ""Game"",
            ""id"": ""bb43df17-ed8c-4bde-aa57-814d111f7ef4"",
            ""actions"": [
                {
                    ""name"": ""MoveUp"",
                    ""type"": ""Button"",
                    ""id"": ""91465318-2832-474a-9461-4145b45fd459"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveDown"",
                    ""type"": ""Button"",
                    ""id"": ""4e922451-0645-4a26-be9f-90b64226dd84"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Earth"",
                    ""type"": ""Button"",
                    ""id"": ""62ca1403-4cce-41d2-a715-2d22ca5b7d11"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Water"",
                    ""type"": ""Button"",
                    ""id"": ""277cf082-6890-41df-b515-cf6f43bd9b48"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Air"",
                    ""type"": ""Button"",
                    ""id"": ""d9096bad-2521-44e4-894f-d6d3b52f1d10"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""8b107d92-29cd-4403-b1c5-8584da676f1f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fb147318-2322-464a-bbf2-9712b9ff984c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Earth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""913983f2-4c92-424f-bb5e-07af19955265"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Water"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1d2b687-725c-4ca7-bbb3-572571977bf8"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Air"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a93ed650-c674-41c8-941b-f2ab6f78f7dc"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f875a14-6659-4806-9039-335ce42736a2"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a71fbd80-fcad-43ad-bd57-845fac349e5d"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d237b98-4a67-4626-b801-6d0ffd8bb199"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e0b7329-52f0-4813-9438-c2acc36bdd23"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""e85d4d3a-6edc-4e48-820d-f97e5c6f2f03"",
            ""actions"": [
                {
                    ""name"": ""VerticalScroll"",
                    ""type"": ""Button"",
                    ""id"": ""d39256f9-0d59-4093-8aab-75a7db30905d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HorizontalScroll"",
                    ""type"": ""Button"",
                    ""id"": ""d22da92e-18b5-491e-a94a-614852e81fe4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""8a9f89e2-db85-428c-9e68-374e92b40233"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""DPad"",
                    ""id"": ""eeeb8490-65c6-47e7-a548-20b4ca9b374f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""9d564e58-e200-4758-a810-b91b0c2c55af"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8239b6b6-76b1-462a-9277-8302a7074dbd"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""d4502d86-1b59-494f-b674-a9da1d5fa324"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""afd117fa-23ed-45c6-8988-f5bb59e2e518"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""de2a6a32-7a11-4355-88a4-008bf08abcf0"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""DPad"",
                    ""id"": ""a965c226-95e2-47c8-a9f5-71eb6ed1160f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""b68a2853-91fc-462f-8195-af9469dd195a"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""dae346b7-dfbe-41b7-ba7a-997ef92c63ff"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Jotstick"",
                    ""id"": ""2a6da044-4897-4bda-b6c3-41ea779a6cda"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""cd064dbc-02bd-4712-9449-aaa66965af51"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""94f42683-38a8-4086-bf14-883fd542db4c"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""800d70b5-e433-4e3d-808b-692751f87cca"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Game
        m_Game = asset.FindActionMap("Game", throwIfNotFound: true);
        m_Game_MoveUp = m_Game.FindAction("MoveUp", throwIfNotFound: true);
        m_Game_MoveDown = m_Game.FindAction("MoveDown", throwIfNotFound: true);
        m_Game_Earth = m_Game.FindAction("Earth", throwIfNotFound: true);
        m_Game_Water = m_Game.FindAction("Water", throwIfNotFound: true);
        m_Game_Air = m_Game.FindAction("Air", throwIfNotFound: true);
        m_Game_Fire = m_Game.FindAction("Fire", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_VerticalScroll = m_UI.FindAction("VerticalScroll", throwIfNotFound: true);
        m_UI_HorizontalScroll = m_UI.FindAction("HorizontalScroll", throwIfNotFound: true);
        m_UI_Select = m_UI.FindAction("Select", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Game
    private readonly InputActionMap m_Game;
    private IGameActions m_GameActionsCallbackInterface;
    private readonly InputAction m_Game_MoveUp;
    private readonly InputAction m_Game_MoveDown;
    private readonly InputAction m_Game_Earth;
    private readonly InputAction m_Game_Water;
    private readonly InputAction m_Game_Air;
    private readonly InputAction m_Game_Fire;
    public struct GameActions
    {
        private @Player1Input m_Wrapper;
        public GameActions(@Player1Input wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveUp => m_Wrapper.m_Game_MoveUp;
        public InputAction @MoveDown => m_Wrapper.m_Game_MoveDown;
        public InputAction @Earth => m_Wrapper.m_Game_Earth;
        public InputAction @Water => m_Wrapper.m_Game_Water;
        public InputAction @Air => m_Wrapper.m_Game_Air;
        public InputAction @Fire => m_Wrapper.m_Game_Fire;
        public InputActionMap Get() { return m_Wrapper.m_Game; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameActions set) { return set.Get(); }
        public void SetCallbacks(IGameActions instance)
        {
            if (m_Wrapper.m_GameActionsCallbackInterface != null)
            {
                @MoveUp.started -= m_Wrapper.m_GameActionsCallbackInterface.OnMoveUp;
                @MoveUp.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnMoveUp;
                @MoveUp.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnMoveUp;
                @MoveDown.started -= m_Wrapper.m_GameActionsCallbackInterface.OnMoveDown;
                @MoveDown.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnMoveDown;
                @MoveDown.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnMoveDown;
                @Earth.started -= m_Wrapper.m_GameActionsCallbackInterface.OnEarth;
                @Earth.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnEarth;
                @Earth.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnEarth;
                @Water.started -= m_Wrapper.m_GameActionsCallbackInterface.OnWater;
                @Water.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnWater;
                @Water.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnWater;
                @Air.started -= m_Wrapper.m_GameActionsCallbackInterface.OnAir;
                @Air.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnAir;
                @Air.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnAir;
                @Fire.started -= m_Wrapper.m_GameActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnFire;
            }
            m_Wrapper.m_GameActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveUp.started += instance.OnMoveUp;
                @MoveUp.performed += instance.OnMoveUp;
                @MoveUp.canceled += instance.OnMoveUp;
                @MoveDown.started += instance.OnMoveDown;
                @MoveDown.performed += instance.OnMoveDown;
                @MoveDown.canceled += instance.OnMoveDown;
                @Earth.started += instance.OnEarth;
                @Earth.performed += instance.OnEarth;
                @Earth.canceled += instance.OnEarth;
                @Water.started += instance.OnWater;
                @Water.performed += instance.OnWater;
                @Water.canceled += instance.OnWater;
                @Air.started += instance.OnAir;
                @Air.performed += instance.OnAir;
                @Air.canceled += instance.OnAir;
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
            }
        }
    }
    public GameActions @Game => new GameActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_VerticalScroll;
    private readonly InputAction m_UI_HorizontalScroll;
    private readonly InputAction m_UI_Select;
    public struct UIActions
    {
        private @Player1Input m_Wrapper;
        public UIActions(@Player1Input wrapper) { m_Wrapper = wrapper; }
        public InputAction @VerticalScroll => m_Wrapper.m_UI_VerticalScroll;
        public InputAction @HorizontalScroll => m_Wrapper.m_UI_HorizontalScroll;
        public InputAction @Select => m_Wrapper.m_UI_Select;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @VerticalScroll.started -= m_Wrapper.m_UIActionsCallbackInterface.OnVerticalScroll;
                @VerticalScroll.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnVerticalScroll;
                @VerticalScroll.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnVerticalScroll;
                @HorizontalScroll.started -= m_Wrapper.m_UIActionsCallbackInterface.OnHorizontalScroll;
                @HorizontalScroll.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnHorizontalScroll;
                @HorizontalScroll.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnHorizontalScroll;
                @Select.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSelect;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @VerticalScroll.started += instance.OnVerticalScroll;
                @VerticalScroll.performed += instance.OnVerticalScroll;
                @VerticalScroll.canceled += instance.OnVerticalScroll;
                @HorizontalScroll.started += instance.OnHorizontalScroll;
                @HorizontalScroll.performed += instance.OnHorizontalScroll;
                @HorizontalScroll.canceled += instance.OnHorizontalScroll;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IGameActions
    {
        void OnMoveUp(InputAction.CallbackContext context);
        void OnMoveDown(InputAction.CallbackContext context);
        void OnEarth(InputAction.CallbackContext context);
        void OnWater(InputAction.CallbackContext context);
        void OnAir(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnVerticalScroll(InputAction.CallbackContext context);
        void OnHorizontalScroll(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
    }
}
